// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CalcButton renders the entity consistently 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Entity
    className="interactive"
    clickable={true}
    events={
        Object {
            "hover-end": [Function],
            "hover-start": [Function],
          }
    }
    geometry={
        Object {
            "depth": 0.02,
            "height": 0.15,
            "primitive": "box",
            "width": 0.15,
          }
    }
    hoverable={true}
    id="calc-button"
    material={
        Object {
            "color": "#bada55",
            "opacity": 1,
            "shader": "flat",
            "side": "double",
          }
    }
    position={
        Object {
            "x": 0,
            "y": 0,
            "z": 0,
          }
    }
    scale={
        Object {
            "x": 0.5,
            "y": 0.5,
            "z": 0.5,
          }
    }
>
    <Text
        align="center"
        color="#000"
        value="Text"
        width={0.8}
        zOffset={0.02}
    />
</Entity>,
  "nodes": Array [
    <Entity
      className="interactive"
      clickable={true}
      events={
            Object {
                  "hover-end": [Function],
                  "hover-start": [Function],
                }
      }
      geometry={
            Object {
                  "depth": 0.02,
                  "height": 0.15,
                  "primitive": "box",
                  "width": 0.15,
                }
      }
      hoverable={true}
      id="calc-button"
      material={
            Object {
                  "color": "#bada55",
                  "opacity": 1,
                  "shader": "flat",
                  "side": "double",
                }
      }
      position={
            Object {
                  "x": 0,
                  "y": 0,
                  "z": 0,
                }
      }
      scale={
            Object {
                  "x": 0.5,
                  "y": 0.5,
                  "z": 0.5,
                }
      }
>
      <Text
            align="center"
            color="#000"
            value="Text"
            width={0.8}
            zOffset={0.02}
      />
</Entity>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CalcButton
        actionToTrigger={[Function]}
        buttonColor="#bada55"
        height={0.15}
        id="calc-button"
        position={
                Object {
                        "x": 0,
                        "y": 0,
                        "z": 0,
                      }
        }
        text="Text"
        textColor="#000"
        textWidth={0.8}
        value="test"
        width={0.15}
/>,
      "_debugID": 16,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CalcButton {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "endIntersection": [Function],
        "props": Object {
          "actionToTrigger": [Function],
          "buttonColor": "#bada55",
          "height": 0.15,
          "id": "calc-button",
          "position": Object {
            "x": 0,
            "y": 0,
            "z": 0,
          },
          "text": "Text",
          "textColor": "#000",
          "textWidth": 0.8,
          "value": "test",
          "width": 0.15,
        },
        "refs": Object {},
        "startIntersection": [Function],
        "state": Object {
          "depth": 0.02,
          "opacity": 1,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Entity
          className="interactive"
          clickable={true}
          events={
                    Object {
                              "hover-end": [Function],
                              "hover-start": [Function],
                            }
          }
          geometry={
                    Object {
                              "depth": 0.02,
                              "height": 0.15,
                              "primitive": "box",
                              "width": 0.15,
                            }
          }
          hoverable={true}
          id="calc-button"
          material={
                    Object {
                              "color": "#bada55",
                              "opacity": 1,
                              "shader": "flat",
                              "side": "double",
                            }
          }
          position={
                    Object {
                              "x": 0,
                              "y": 0,
                              "z": 0,
                            }
          }
          scale={
                    Object {
                              "x": 0.5,
                              "y": 0.5,
                              "z": 0.5,
                            }
          }
>
          <Text
                    align="center"
                    color="#000"
                    value="Text"
                    width={0.8}
                    zOffset={0.02}
          />
</Entity>,
        "_debugID": 17,
        "_renderedOutput": <Entity
          className="interactive"
          clickable={true}
          events={
                    Object {
                              "hover-end": [Function],
                              "hover-start": [Function],
                            }
          }
          geometry={
                    Object {
                              "depth": 0.02,
                              "height": 0.15,
                              "primitive": "box",
                              "width": 0.15,
                            }
          }
          hoverable={true}
          id="calc-button"
          material={
                    Object {
                              "color": "#bada55",
                              "opacity": 1,
                              "shader": "flat",
                              "side": "double",
                            }
          }
          position={
                    Object {
                              "x": 0,
                              "y": 0,
                              "z": 0,
                            }
          }
          scale={
                    Object {
                              "x": 0.5,
                              "y": 0.5,
                              "z": 0.5,
                            }
          }
>
          <Text
                    align="center"
                    color="#000"
                    value="Text"
                    width={0.8}
                    zOffset={0.02}
          />
</Entity>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CalcButton
    actionToTrigger={[Function]}
    buttonColor="#bada55"
    height={0.15}
    id="calc-button"
    position={
        Object {
            "x": 0,
            "y": 0,
            "z": 0,
          }
    }
    text="Text"
    textColor="#000"
    textWidth={0.8}
    value="test"
    width={0.15}
/>,
}
`;
